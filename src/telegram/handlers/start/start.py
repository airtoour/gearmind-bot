from typing import Any

from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from sqlalchemy.ext.asyncio import AsyncSession
from db.models import UsersRepository

from telegram.commands import set_main_menu
from telegram.keyboards.inline.inline import (
    to_signup,
    to_car_register
)
from telegram.states.signup_users import SignupUserStates

from loguru import logger


router = Router(name="LETS FKING START")


@router.message(CommandStart())
async def start(message: Message, user: Any):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        await message.bot.delete_my_commands()

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ /start
        await message.delete()

        if user:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–æ–±—â–∞–µ–º –µ–º—É –æ–± —ç—Ç–æ–º
            await message.answer(
                "‚úÖ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n"
                "–í–∞–º <b>–¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã</b> –¥–ª—è —Ä–∞–±–æ—Ç—ã, –º–æ–∂–µ–º –Ω–∞—á–∏–Ω–∞—Ç—å? üòá"
            )

            # –°—Ç–∞–≤–∏–º –∫–æ–º–∞–Ω–¥—ã –≤ —á–∞—Ç–µ
            await set_main_menu(message.bot)

            return

        # –®–ª—ë–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer(
            text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É <b>GearMind</b> üòá\n"
                 "\n"
                 "‚ñ´Ô∏è –Ø —É–º–µ—é –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å–º–æ–∂–µ–º –í–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å\n"
                 "‚ñ´Ô∏è –í—Å–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –í–∞—Å –≤–æ–ø—Ä–æ—Å—ã —Ç—ã —Å–º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n"
                 "\n"
                 "–î–∞–≤–∞–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –í–∞—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ üëá",
            reply_markup=to_signup
        )
    except Exception as e:
        logger.exception(f"Start: {e}")
        await message.answer(
            "–ö–∞–∂–µ—Ç—Å—è, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, –∏–∑–≤–∏–Ω–∏—Ç–µ, "
            "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –º—ã —Ä–µ—à–∞–µ–º —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã...."
        )


@router.callback_query(F.data == "signup")
async def signup(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.message.bot.delete_message(
            chat_id=callback.from_user.id,
            message_id=callback.message.message_id
        )

        # –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        get_name_message = await callback.message.answer(
            "–ò—Ç–∞–∫, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–∞—è, —Ç—Ä–µ–±—É–µ—Ç—Å—è "
            "–≤—Å–µ–≥–æ-–ª–∏—à—å <b>–í–∞—à–µ –∏–º—è</b>\n"
            "\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –µ–≥–æ –Ω–∏–∂–µ üëá"
        )

        # –°—Ç–∞–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—É–¥–∞ ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º –∏–º–µ–Ω–∏
        await state.set_state(SignupUserStates.name)
        await state.set_data({"message_id": get_name_message.message_id})
    except Exception as e:
        logger.error(f"signup: {e}")
        await callback.answer(
            "–ö–∞–∂–µ—Ç—Å—è, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞.\n"
            "–°—Ç–∞—Ä–∞–µ–º—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —ç—Ç–∏–º, –∏–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞..."
        )


@router.message(SignupUserStates.name)
async def get_name(message: Message, state: FSMContext, session: AsyncSession):
    """–•—ç–Ω–¥–ª–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º –∏–º–µ–Ω–∏
        message_id = await state.get_value("message_id")

        # –£–¥–∞–ª—è–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.bot.delete_message(message.chat.id, message_id)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –µ–≥–æ –ò–º–µ–Ω–µ–º
        await message.delete()

        # –í —Ä–∞–º–∫–∞—Ö —Å–µ—Å—Å–∏–∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        new_user = await UsersRepository.add(
            session=session,
            tg_user_id=message.from_user.id,
            name=message.text
        )

        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
        if not new_user:
            await message.answer(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, "
                "–ø–æ–ø—Ä–æ–±—É–π—Ç–µ <b>—Å–Ω–æ–≤–∞</b> –∏–ª–∏ <b>–ø–æ–∑–¥–Ω–µ–µ</b>!"
            )
            return

        # –°—Ç–∞–≤–∏–º –∫–æ–º–∞–Ω–¥—ã
        await set_main_menu(message.bot)

        # –û–ø–æ–≤–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        await message.answer(
            text=f"‚úÖ –û—Ç–ª–∏—á–Ω–æ, {new_user.name}! –¢–µ–ø–µ—Ä—å –º—ã –º–æ–∂–µ–º –Ω–∞—á–∏–Ω–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
                 "\n"
                 "–ò—Ç–∞–∫, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã <b>–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É</b> –í–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è "
                 "–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π –º–∞—à–∏–Ω–µ. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ üëá",
            reply_markup=to_car_register
        )
    except Exception as e:
        logger.error(f"Get User Name: {e}")
        await message.answer(
            "–ö–∞–∂–µ—Ç—Å—è, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞.\n"
            "–°—Ç–∞—Ä–∞–µ–º—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —ç—Ç–∏–º, –∏–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞..."
        )
    finally:
        await state.clear()
