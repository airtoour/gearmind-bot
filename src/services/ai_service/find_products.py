import re
from typing import List, Dict
from db.models import Cars

class FindProducts:
    """–°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å OZON"""
    def __init__(self, car: Cars, text: str):
        self.car = car
        self.text = text
        self.urls: List[str] = []
        self.candidates: List[str] = []

    def get_urls_list(self) -> Dict[str, str]:
        """–ü–æ–∏—Å–∫ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ –æ—Ç–≤–µ—Ç–∞"""
        products_names_list = self._get_products_names()
        products_urls_list = self._get_urls(products_names_list)

        return dict(zip(products_names_list, products_urls_list))

    def _get_products_names(self) -> List[str]:
        """–ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –ò–ò –≤ —Å–ø–∏—Å–æ–∫"""
        cleaned_text = self._clean()

        numbered = re.findall(pattern=r"\d+\.\s*(.+?):", string=cleaned_text)

        if numbered:
            self.candidates.extend(numbered)

        if not self.candidates:
            # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–æ–º–µ—Ä–æ–≤, –∏—â–µ–º –ø–æ –±—É–ª–ª–µ—Ç–∞–º
            bullets = re.findall(r"‚Ä¢\s*(.+?):", cleaned_text)

            if bullets:
                self.candidates.extend(bullets)

        if not self.candidates:
            # –ï—Å–ª–∏ –Ω–µ—Ç –¥–≤–æ–µ—Ç–æ—á–∏–π, –Ω–æ –µ—Å—Ç—å –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
            bold = re.findall(r"<b>(.+?)</b>", cleaned_text)

            if bold:
                self.candidates.extend(bold)

        return list({item.strip() for item in self.candidates})

    def _get_urls(self, products: List[str]) -> List[str]:
        """–ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è URL`–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤"""
        for product in products:
            product += f" –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è {self.car.full}"

            url = (
                f"https://www.ozon.ru/search/?text={product.replace(" ", "+")}&from_global=true"
            )
            self.urls.append(url)

        return self.urls

    def _clean(self):
        """–£–±–∏—Ä–∞–µ–º HTML- –∏ Markdown-—Ä–∞–∑–º–µ—Ç–∫—É"""
        text = re.sub(r"</?b>", "", self.text)
        text = re.sub(r"</?strong>", "", text)

        text = re.sub(r"\*\*(.*?)\*\*", r"\1", text)
        text = re.sub(r"\*(.*?)\*", r"\1", text)

        return text


TEXT = """
üìå **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:** 5W-40

üéØ **–í–∞—Ä–∏–∞–Ω—Ç—ã:**
1. **Mobil Super 2000 X1 5W-40**: —Å–∏–Ω—Ç–µ—Ç–∏–∫–∞, –∑–∞—â–∏—Ç–∞ –æ—Ç –∏–∑–Ω–æ—Å–∞, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –∫–ª–∏–º–∞—Ç–∞. –¶–µ–Ω–∞: ~3999 —Ä—É–±.
2. **ZIC X5 5W-40**: —Ö–æ—Ä–æ—à–∞—è —Ç–µ–∫—É—á–µ—Å—Ç—å –ø—Ä–∏ –Ω–∏–∑–∫–∏—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞—Ö, –∑–∞—â–∏—Ç–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è. –¶–µ–Ω–∞: ~3499 —Ä—É–±.
3. **–†–æ—Å–Ω–µ—Ñ—Ç—å Maximum 5W-40**: –¥–æ—Å—Ç—É–ø–Ω–∞—è —Ü–µ–Ω–∞, –∑–∞—â–∏—Ç–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è. –¶–µ–Ω–∞: ~1999 —Ä—É–±.

üí° **–°–æ–≤–µ—Ç:** Mobil Super 2000 –∏ ZIC X5 –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —Ö–æ—Ä–æ—à—É—é –∑–∞—â–∏—Ç—É –¥–≤–∏–≥–∞—Ç–µ–ª—è –∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö 
–∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏–π. –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –º–∞—Å–ª–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –µ–≥–æ –≤—è–∑–∫–æ—Å—Ç—å –∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏, —á—Ç–æ–±—ã 
–æ–±–µ—Å–ø–µ—á–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –¥–≤–∏–≥–∞—Ç–µ–ª—è –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.
"""


if __name__ == "__main__":
    import asyncio
    from db.models import CarsRepository
    from db.db_config import async_session_maker

    async def main():
        async with async_session_maker() as session:
            car = await CarsRepository.find_one_or_none(session, user_id="eee49b86-13fd-443d-8ebd-a5feb9e6e76f")

        find = FindProducts(car, TEXT)
        print(find.get_urls_list())

    asyncio.run(main())