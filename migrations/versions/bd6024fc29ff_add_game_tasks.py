"""add game tasks

Revision ID: bd6024fc29ff
Revises: df3a35224612
Create Date: 2025-04-09 09:29:03.173248

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from db.models.tasks.schemas import TasksTypeTypeDecorator
# revision identifiers, used by Alembic.
revision: str = 'bd6024fc29ff'
down_revision: Union[str, None] = 'df3a35224612'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', TasksTypeTypeDecorator(length=11), nullable=False),
    sa.Column('target_value', sa.Integer(), nullable=False),
    sa.Column('reward_xp', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('current_value', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_game_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('car_id', sa.UUID(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('last_wash_car_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.drop_table('game_progress')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('game_progress',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('experience', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('car_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('last_wash_car_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], name='game_progress_car_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='game_progress_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='game_progress_pkey'),
    sa.UniqueConstraint('user_id', name='game_progress_user_id_key')
    )
    op.drop_table('users_game_profiles')
    op.drop_table('users_tasks')
    op.drop_table('tasks')
    # ### end Alembic commands ###
